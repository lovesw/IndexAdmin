<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    <!-- 加载属性文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 包含其他的实体bean的配置文件 -->
    <tx:annotation-driven/>
    <context:component-scan base-package="com.*">
        <context:exclude-filter type="regex" expression="com.*.action"/>
    </context:component-scan>

    <!--配置数据库链接-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 连接数据库 -->
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="initialPoolSize" value="${jdbc.initPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
    </bean>
    <!-- 管理hibernate的sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载配置hibernate的文件 -->
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>
    <!--缓存配置-->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
        <!-- 由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
        <property name="shared" value="true"/>
    </bean>

    <!-- 事务管理的声明 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>

    </bean>
    <!--切面配置-->
    <aop:config>
        <aop:pointcut id="bussinessService" expression="execution(* com.*.dbdao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService"/>
    </aop:config>


    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="save*"/>
            <tx:method name="update*"/>
            <tx:method name="add*"/>
            <tx:method name="change*"/>
            <tx:method name="delete*"/>
        </tx:attributes>
    </tx:advice>

    <!--日志记录配置-->
    <!--    <bean id="loggUtils" class="com.data.util.LoggUtils"/>
        <aop:config>
            <aop:aspect ref="loggUtils"> &lt;!&ndash;指定切面&ndash;&gt;
                &lt;!&ndash;定义切点&ndash;&gt;
                <aop:pointcut id="logging" expression="execution(* com.*.*.*.*(..))"/>
                &lt;!&ndash;定义连接点&ndash;&gt;
                <aop:before pointcut-ref="logging" method="beforeLog"/>
                <aop:after pointcut-ref="logging" method="afterLog"/>
                <aop:after-returning pointcut-ref="logging" method="afterReturningLog"/>
                <aop:after-throwing pointcut-ref="logging" method="afterThrowingLog"/>
            </aop:aspect>
        </aop:config>-->

</beans>
